<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{53f75a9f-ce5b-4537-a8c7-41cbbfdb1ac5}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	counter:INT:=0;
	iNUMBER1 : INT:=2;
	sNAME1 : STRING(255):='24_5A';
	Trigger : BOOL;
	rtrigRESET: R_TRIG;
	rtrigE_STOP: R_TRIG;
	rtrigSTART: R_TRIG;
	rtrigPAUSE: R_TRIG;
	rtrigINIT: R_TRIG;
	ftrigRERUN: F_TRIG;
	temp_state:E_MAIN_STATE;
	temp_supply_state:E_STATION_STATE;
	temp_sep1_state:E_STATION_STATE;
	temp_sep2_state:E_STATION_STATE;
	temp_clean_state:E_STATION_STATE;
	temp_conv_state:E_CONVAYOR_STATE;
	temp_supconv_state:E_CONVAYOR_STATE;
	
	fbSEPARATION1: FB_SEPARATE;		
	fbSEPARATION2: FB_SEPARATE;	
	
	action_timeout: TON:=(PT:=T#20s);
	move_timeout: TON;
	bTIMEOUT:BOOL:=FALSE;
END_VAR


   
]]></Declaration>
    <Implementation>
      <ST><![CDATA[A_ERROR_CHECK();
PISTONS_CYCLE();
MAIN_CONVAYOR();
SUPPLY_CONVAYOR();
SUPPLY();
fbSEPARATION1(piston_updown:=  fbPiston[3],
			  piston_colet:=  fbPiston[4],
			  piston_puller:=  fbPiston[5],
			  piston_tray:=  fbPiston[6],
			  piston_pins:=  fbPiston[7],
			  eState:= eSEPARATE1,
			  station_num:=separate1_station_num);
		
fbSEPARATION2(piston_updown:=  fbPiston[8],
			  piston_colet:=  fbPiston[9],
			  piston_puller:=  fbPiston[10],
			  piston_tray:=  fbPiston[11],
			  piston_pins:=  fbPiston[12],
			  eState:= eSEPARATE2,
 			  station_num:=separate2_station_num);	
	
CLEAN();
MOTORS();

rtrigRESET(CLK:= b_RESET, Q=> );
rtrigE_STOP(CLK:= b_E_STOP, Q=> );
rtrigINIT(CLK:= bINIT_MAIN, Q=> );
rtrigSTART(CLK:= bSTART, Q=> );
rtrigPAUSE(CLK:= bPAUSE_MAIN, Q=> );
ftrigRERUN(CLK:= bPAUSE_MAIN, Q=> );
action_timeout(IN:=bTIMEOUT);

//MAIN_STATE_MACHINE:
CASE eMAIN_STATE OF
	E_MAIN_STATE.uninit:
	bTIMEOUT:=FALSE;
	bPAUSE_MAIN:=FALSE;
	eSUPPLY := E_STATION_STATE.unInit;
	eSEPARATE1 := E_STATION_STATE.unInit;
	eSEPARATE2 := E_STATION_STATE.unInit;
	eCLEAN := E_STATION_STATE.unInit;
	eMAIN_CONVAYOR_STATE := E_CONVAYOR_STATE.unInit;
	eSUPPLY_CONVAYOR_STATE:=E_CONVAYOR_STATE.unInit;
	eMAIN_STATE:=E_MAIN_STATE.idle;
		
	E_MAIN_STATE.idle:
		IF rtrigSTART.Q THEN
			IF b_sense_home1 AND NOT b_sense_home2 AND b_sense_home3 THEN 
				eMAIN_STATE:=E_MAIN_STATE.do_actions;
			END_IF
		END_IF
		
	E_MAIN_STATE.do_actions:
		bTIMEOUT:=TRUE;
		IF b_sense_home1 AND NOT b_sense_home2 AND b_sense_home3 THEN 
			IF eSUPPLY = E_STATION_STATE.idle THEN     
				eSUPPLY := E_STATION_STATE.do_action1;
			END_IF
			IF eSEPARATE1 = E_STATION_STATE.idle THEN
				eSEPARATE1 := E_STATION_STATE.do_action1;
			END_IF
			IF eSEPARATE2 = E_STATION_STATE.idle THEN
				eSEPARATE2 := E_STATION_STATE.do_action1;
			END_IF
			IF eCLEAN = E_STATION_STATE.idle THEN
				eCLEAN := E_STATION_STATE.do_action1;
			END_IF
		END_IF
		IF (eSEPARATE1 = E_STATION_STATE.done AND eSEPARATE2 = E_STATION_STATE.done AND eSUPPLY = E_STATION_STATE.done  AND eCLEAN = E_STATION_STATE.done) THEN
			eSUPPLY := E_STATION_STATE.idle;
			eSEPARATE1 := E_STATION_STATE.idle;
			eSEPARATE2 := E_STATION_STATE.idle;
			eCLEAN := E_STATION_STATE.idle;
			eMAIN_STATE:=E_MAIN_STATE.move_next;
			bTIMEOUT:=FALSE;
		END_IF
		
		IF action_timeout.Q THEN
			eMAIN_STATE:=E_MAIN_STATE.error;
		END_IF
		
	E_MAIN_STATE.move_next: 
		IF eMAIN_CONVAYOR_STATE = E_CONVAYOR_STATE.idle THEN
			eMAIN_CONVAYOR_STATE := E_CONVAYOR_STATE.do_move;
		END_IF
		IF eSUPPLY_CONVAYOR_STATE = E_CONVAYOR_STATE.idle THEN
			eSUPPLY_CONVAYOR_STATE := E_CONVAYOR_STATE.do_move;
		END_IF
		IF eMAIN_CONVAYOR_STATE = E_CONVAYOR_STATE.done AND eSUPPLY_CONVAYOR_STATE = E_CONVAYOR_STATE.done THEN
			eMAIN_CONVAYOR_STATE := E_CONVAYOR_STATE.idle;
			eSUPPLY_CONVAYOR_STATE := E_CONVAYOR_STATE.idle;
			eMAIN_STATE:=E_MAIN_STATE.do_actions;
		END_IF
		
	E_MAIN_STATE.pause: 
		bTIMEOUT:=FALSE;
		IF ftrigRERUN.Q THEN
			eMAIN_STATE:=temp_state;
			eSUPPLY:=temp_supply_state;
			eSEPARATE1:=temp_sep1_state;
			eSEPARATE2:=temp_sep2_state;
			eCLEAN:=temp_clean_state;
			eMAIN_CONVAYOR_STATE:=temp_conv_state;
			eSUPPLY_CONVAYOR_STATE:=temp_conv_state;
		END_IF
		
	E_MAIN_STATE.estop: 
		eSUPPLY := E_STATION_STATE.error;
		eSEPARATE1 := E_STATION_STATE.error;
		eSEPARATE2 := E_STATION_STATE.error;
		eCLEAN := E_STATION_STATE.error;
		eMAIN_CONVAYOR_STATE := E_CONVAYOR_STATE.error;
		eSUPPLY_CONVAYOR_STATE:=E_CONVAYOR_STATE.error;
	
	E_MAIN_STATE.error:
		// error	

END_CASE

IF rtrigRESET.Q THEN
	MAIN_CONVAYOR.A_set_cart_spaces();
	MAIN_CONVAYOR.A_SETUP();
	eMAIN_STATE:=E_MAIN_STATE.uninit;
END_IF

IF rtrigE_STOP.Q THEN
	eMAIN_STATE:=E_MAIN_STATE.estop;
END_IF

IF rtrigINIT.Q THEN
	eMAIN_STATE:=E_MAIN_STATE.uninit;
END_IF

IF rtrigPAUSE.Q THEN
	temp_state:=eMAIN_STATE;
	temp_supply_state:=eSUPPLY;
	temp_sep1_state:=eSEPARATE1;
	temp_sep2_state:=eSEPARATE2;
	temp_clean_state:=eCLEAN;
	temp_conv_state:=eMAIN_CONVAYOR_STATE;
	temp_supconv_state:=eMAIN_CONVAYOR_STATE;
	eMAIN_STATE:=E_MAIN_STATE.pause;
	eSUPPLY:=E_STATION_STATE.pause;
	eSEPARATE1:=E_STATION_STATE.pause;
	eSEPARATE2:=E_STATION_STATE.pause;
	eMAIN_CONVAYOR_STATE:=E_CONVAYOR_STATE.pause;
	eSUPPLY_CONVAYOR_STATE:=E_CONVAYOR_STATE.pause;
	
END_IF


]]></ST>
    </Implementation>
    <Action Name="A_ERROR_CHECK" Id="{31fa973b-2552-4508-9ddd-0d789e896870}">
      <Implementation>
        <ST><![CDATA[FOR counter:=1 TO iNUMBER_OF_PISTONS BY 1 DO
	IF fbPiston[counter].PistonStatus = ePistonStatus.ERROR THEN
		eMAIN_STATE:=E_MAIN_STATE.error;
		
	END_IF
	
END_FOR;]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>