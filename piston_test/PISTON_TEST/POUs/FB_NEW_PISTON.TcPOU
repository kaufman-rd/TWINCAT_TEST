<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_NEW_PISTON" Id="{103ce51c-b586-4a9e-935e-2be8c1d3f70d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_NEW_PISTON
VAR_INPUT
	
	bMANUAL:BOOL:=FALSE;
	stPISTON:   ST_PISTON;
	bCMD_OPEN_SWR: BOOL;
	bCMD_CLOSE_SWR: BOOL;
	bCMD_OPEN: BOOL;
	bSEN_OPEN: BOOL;
	bSEN_CLOSE: BOOL;
END_VAR
VAR_OUTPUT
	PistonStatus:ePistonStatus;
	bVALVE_OPEN: BOOL;
	bVALVE_CLOSE: BOOL;
	
	
END_VAR
VAR
	timerOpening:ton;
	timerClosing:ton;
	timeoutOpening:ton;
	timeoutClosing:ton;
	bSTARTUP: BOOL:=FALSE;
	
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[   IF NOT bSTARTUP THEN
	bCMD_OPEN:=stPISTON.bOPEN_BY_DEFAULT;
	bSTARTUP:=TRUE;
END_IF

timerOpening(IN:= bVALVE_OPEN, PT:=REAL_TO_TIME(stPISTON.openTime)*1000 , Q=> , ET=> );
timerClosing(IN:= NOT bVALVE_OPEN, PT:=REAL_TO_TIME(stPISTON.closeTime)*1000 , Q=> , ET=> );
timeoutOpening(IN:= bVALVE_OPEN AND NOT bSEN_OPEN, PT:= stPISTON.timeoutOpen, Q=> , ET=> );
timeoutClosing(IN:= NOT bVALVE_OPEN AND NOT bSEN_CLOSE, PT:= stPISTON.timeoutClose, Q=> , ET=> );
IF bMANUAL THEN
	bVALVE_OPEN:= bCMD_OPEN;
	bVALVE_CLOSE:= NOT bCMD_OPEN;
ELSE
	bVALVE_OPEN:= bCMD_OPEN_SWR;
	bVALVE_CLOSE:= NOT bCMD_OPEN_SWR;
END_IF



CASE stPISTON.ePISTON_TYPE OF
	0://NO_SENSORS
		IF bVALVE_OPEN AND NOT timerOpening.Q THEN
			PistonStatus:=ePistonStatus.OPENING;
		ELSIF bVALVE_OPEN AND timerOpening.Q THEN
			PistonStatus:=ePistonStatus.OPENED;
		ELSIF bVALVE_CLOSE AND NOT timerClosing.Q THEN
			PistonStatus:=ePistonStatus.CLOSING;
		ELSIF bVALVE_CLOSE AND timerClosing.Q THEN
			PistonStatus:=ePistonStatus.CLOSED;
		END_IF
		
 
	
	1://only open sensor
	
		IF bVALVE_OPEN AND NOT bSEN_OPEN THEN
			PistonStatus:=ePistonStatus.OPENING;
		ELSIF bVALVE_OPEN AND bSEN_OPEN THEN
			PistonStatus:=ePistonStatus.OPENED;
		ELSIF bVALVE_CLOSE AND NOT timerClosing.Q THEN
			PistonStatus:=ePistonStatus.CLOSING;
		ELSIF bVALVE_CLOSE AND timerClosing.Q THEN
			PistonStatus:=ePistonStatus.CLOSED;
		END_IF
	
	2:// only close sensor
		IF bVALVE_OPEN AND NOT timerOpening.Q THEN
			PistonStatus:=ePistonStatus.OPENING;
		ELSIF bVALVE_OPEN AND timerOpening.Q THEN
			PistonStatus:=ePistonStatus.OPENED;
		ELSIF bVALVE_CLOSE AND NOT bSEN_CLOSE THEN
			PistonStatus:=ePistonStatus.CLOSING;
		ELSIF bVALVE_CLOSE AND bSEN_CLOSE THEN
			PistonStatus:=ePistonStatus.CLOSED;
		END_IF
	
	
	3://both sensors
		IF bVALVE_OPEN AND NOT bSEN_OPEN THEN
			PistonStatus:=ePistonStatus.OPENING;
		ELSIF bVALVE_OPEN AND bSEN_OPEN THEN
			PistonStatus:=ePistonStatus.OPENED;
		ELSIF bVALVE_CLOSE AND NOT bSEN_CLOSE THEN
			PistonStatus:=ePistonStatus.CLOSING;
		ELSIF bVALVE_CLOSE AND bSEN_CLOSE THEN
			PistonStatus:=ePistonStatus.CLOSED;
		END_IF
	
END_CASE

IF timeoutOpening.Q AND (stPISTON.ePISTON_TYPE = E_PISTON_TYPE.ONLY_OPEN OR stPISTON.ePISTON_TYPE = E_PISTON_TYPE.BOTH)  THEN
	PistonStatus:=ePistonStatus.ERROR;
END_IF
IF timeoutClosing.Q  AND (stPISTON.ePISTON_TYPE = E_PISTON_TYPE.ONLY_CLOSE OR stPISTON.ePISTON_TYPE = E_PISTON_TYPE.BOTH)  THEN
	PistonStatus:=ePistonStatus.ERROR;
END_IF





]]></ST>
    </Implementation>
    <Action Name="A_CLOSE" Id="{445c1d90-1cac-4e57-b5b0-98b5b66b350e}">
      <Implementation>
        <ST><![CDATA[bCMD_OPEN_SWR:=FALSE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_OPEN" Id="{3cd0eff9-6206-4bfb-b1a8-efdd601fff3d}">
      <Implementation>
        <ST><![CDATA[bCMD_OPEN_SWR:=TRUE;]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>